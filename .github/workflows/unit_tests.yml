name: unit tests

on:
  push:
  pull_request:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.7", "3.8", "3.9", "3.10" ]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3.1.2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install requirements
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8

      - name: Build translations
        run: python3 setup.py compile_catalog

      - name: Run unit tests
        run: python -m unittest tests/test_similarity.py tests/test_alexa_redirect_urls.py

      - name: Lint with flake8
        run: flake8 jellyfin_alexa_skill --count --select=E9,F63,F7,F82 --show-source --statistics

  tests-jellyfin-api:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/infinityofspace/jellyfin_alexa_skill:unittests

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3 and test setup requirements
        run: apt update && apt install -y python3 python3-pip netcat

      - name: Install requirements
        run: |
          pip3 install --upgrade pip
          pip3 install -r requirements.txt

      - name: Build translations
        run: python3 setup.py compile_catalog

      - name: Start Jellyfin test server
        run: |
          cd /
          /start_jellyfin.sh > /dev/null 2>&1 &

      - name: Wait until server is up or timeout of 60 seconds
        run: timeout 60 sh -c 'until nc -z $0 $1; do sleep 1; done' localhost 8096

      - name: Run unit tests
        run: python3 -m unittest tests/test_jellyfin_api_client.py

  tests-skill:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/infinityofspace/jellyfin_alexa_skill:unittests

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3 and test setup requirements
        run: apt update && apt install -y python3 python3-pip netcat

      - name: Install requirements
        run: |
          pip3 install --upgrade pip
          pip3 install -r requirements.txt

      - name: Build translations
        run: python3 setup.py compile_catalog

      - name: Start Jellyfin test server
        run: |
          cd /
          /start_jellyfin.sh > /dev/null 2>&1 &

      - name: Wait until server is up or timeout of 60 seconds
        run: timeout 60 sh -c 'until nc -z $0 $1; do sleep 1; done' localhost 8096

      - name: Run unit tests
        run: python3 -m unittest tests/test_skill_response.py
